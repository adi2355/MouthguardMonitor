# AI KNOWLEDGE BASE CODE CONTEXT
# Generated context from extracted codebase
# Total files processed: 41


================================================================================
# COMPONENT COMPLEXITY
================================================================================

| Component | Complexity | File |
|-----------|------------|------|
| RecommendationsScreen | 27 | /home/adi235/canova/CanovaReactNativeApp/app/ai/recommendations.tsx |
| Devices | 26 | /home/adi235/canova/CanovaReactNativeApp/app/(tabs)/devices.tsx |
| ChatScreen | 23 | /home/adi235/canova/CanovaReactNativeApp/app/ai/chat.tsx |
| TrendingScreen | 21 | /home/adi235/canova/CanovaReactNativeApp/app/(tabs)/trending.tsx |
| StrainsList | 16 | /home/adi235/canova/CanovaReactNativeApp/app/components/trending/StrainsList.tsx |
| AIOnboarding | 15 | /home/adi235/canova/CanovaReactNativeApp/app/ai/onboarding.tsx |
| MyData | 14 | /home/adi235/canova/CanovaReactNativeApp/app/(tabs)/mydata.tsx |
| AILayout | 13 | /home/adi235/canova/CanovaReactNativeApp/app/ai/_layout.tsx |
| RecommendationFeedback | 13 | /home/adi235/canova/CanovaReactNativeApp/app/components/ai/RecommendationFeedback.tsx |
| RatingBadge | 12 | /home/adi235/canova/CanovaReactNativeApp/app/components/trending/StrainsList.tsx |
| TypeBadge | 12 | /home/adi235/canova/CanovaReactNativeApp/app/components/trending/StrainsList.tsx |

### Complexity Guidelines

- 0-5: Low complexity - Simple, well-structured component
- 6-10: Medium complexity - Moderately complex, still maintainable
- 11-20: High complexity - Complex component that may need refactoring
- 21+: Very high complexity - Component that should be refactored


================================================================================
# COMPONENT HIERARCHY
================================================================================

## TabLayout
- Tabs
- MaterialCommunityIcons

## Devices
- SavedDevice
- View
- Text
- FlatList
- TouchableOpacity
- ActivityIndicator
- ScrollView
- SafeAreaProvider
- Device
- MaterialCommunityIcons
- LinearGradient

## Index
- Redirect

## JournalCalendar
- View
- Text
- Modal
- TextInput
- Button
- Calendar

## MyData
- View
- SafeAreaProvider

## TrendingScreen
- View
- Text
- SafeAreaProvider
- StrainSearchFilters
- Strain
- LinearGradient

## RootLayout
- Stack
- BluetoothContext
- BluetoothHandler

## AILayout
- Tabs
- MaterialCommunityIcons
- View
- ActivityIndicator
- Text
- LinearGradient

## ChatScreen
- View
- Text
- TextInput
- TouchableOpacity
- FlatList
- KeyboardAvoidingView
- ActivityIndicator
- Stack
- MaterialCommunityIcons
- ChatMessage

## AIIndex
- Redirect

## JournalInsightsScreen
- View
- Text
- ScrollView
- TouchableOpacity
- ActivityIndicator
- Stack
- MaterialCommunityIcons

## AIOnboarding
- View
- Text
- TouchableOpacity
- ActivityIndicator
- Stack
- LinearGradient
- MaterialCommunityIcons

## RecommendationsScreen
- View
- Text
- ScrollView
- TouchableOpacity
- TextInput
- Stack
- MaterialCommunityIcons

## Header
- View
- Text
- LinearGradient
- MaterialCommunityIcons
- TextInput
- TouchableOpacity
- Ionicons

## TimeDistributionCard
- View
- Text
- MaterialCommunityIcons
- LinearGradient

## TimeSlotComponent
- View
- Text
- MaterialCommunityIcons
- LinearGradient

## RecommendationFeedback
- View
- Text
- TouchableOpacity
- TextInput
- ActivityIndicator
- MaterialCommunityIcons

## GoalTrackingCard
- View
- Text
- TouchableOpacity
- MaterialCommunityIcons

## MedicalCard
- View
- Text
- TouchableOpacity
- MaterialCommunityIcons
- LinearGradient

## Section
- View
- Text
- LinearGradient
- ScrollView
- TouchableOpacity
- ActivityIndicator
- Stack
- MaterialCommunityIcons
- Strain

## SetGoalModal
- View
- Text
- Modal
- TouchableOpacity
- TextInput
- TouchableWithoutFeedback
- MaterialCommunityIcons

## StrainUsageCard
- View
- Text
- TouchableOpacity
- MaterialCommunityIcons

## Card
- View
- ViewStyle

## ErrorView
- View
- Text
- MaterialCommunityIcons

## LoadingView
- View
- Text
- MaterialCommunityIcons

## CompareBar
- View
- Text
- TouchableOpacity
- FlatList
- MaterialCommunityIcons

## SearchBar
- View
- TextInput
- TouchableOpacity
- MaterialCommunityIcons
- LinearGradient

## SearchFilters
- View
- Text
- TouchableOpacity
- ScrollView
- MaterialCommunityIcons
- StrainSearchFilters
- LinearGradient

## RatingBadge
- View
- Text
- TouchableOpacity
- FlatList
- MaterialCommunityIcons
- LinearGradient
- ScrollView
- ActivityIndicator
- Stack
- Strain

## TypeBadge
- View
- Text
- TouchableOpacity
- FlatList
- MaterialCommunityIcons
- LinearGradient

## StrainsList
- View
- Text
- TouchableOpacity
- FlatList
- MaterialCommunityIcons
- LinearGradient

## DataOverviewsLayout
- Stack

## CompareRow
- View
- Text
- ScrollView
- TouchableOpacity
- MaterialCommunityIcons
- Strain

## CompareScreen
- View
- Text
- ScrollView
- TouchableOpacity
- MaterialCommunityIcons
- Strain

## DailyAverageOverview
- View
- Text
- ScrollView
- TouchableOpacity
- SafeAreaProvider
- MaterialCommunityIcons

## DailyLimits
- View
- Text
- TouchableOpacity
- Switch
- MaterialCommunityIcons

## DetailedDataView
- View
- Text
- ScrollView
- TouchableOpacity
- StatusBar
- MaterialCommunityIcons
- SafeAreaView
- LinearGradient

## MonthlyOverview
- View
- Text
- ScrollView
- SafeAreaProvider

## StrainUsage
- View
- Text
- ScrollView
- TouchableOpacity
- TextInput
- SafeAreaProvider
- MaterialCommunityIcons
- LinearGradient

## StrainDetailsRedirect
- Redirect

## StrainsLayout
- Stack

## StatItem
- View
- Text
- ScrollView
- TouchableOpacity
- ActivityIndicator
- Stack
- MaterialCommunityIcons
- LinearGradient
- Strain

## DetailItem
- View
- Text
- ScrollView
- TouchableOpacity
- ActivityIndicator
- Stack
- MaterialCommunityIcons
- LinearGradient
- Strain

## StrainDetails
- View
- Text
- ScrollView
- TouchableOpacity
- ActivityIndicator
- Stack
- MaterialCommunityIcons
- LinearGradient
- Strain

## WeeklyAverage
- View
- Text
- ScrollView
- TouchableOpacity
- SafeAreaProvider
- MaterialCommunityIcons

## WeeklyOverview
- View
- Text
- ScrollView
- SafeAreaProvider

## MyDataLayout
- Stack

## CompareStrains
- View
- Text

## PopularStrains
- View
- Text
- FlatList
- TouchableOpacity
- SafeAreaView
- MaterialCommunityIcons



================================================================================
# PERFORMANCE ISSUES
================================================================================

## Component 'ChatScreen' has useEffect without dependency array
Components affected:
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen
- ChatScreen

## Component 'RecommendationsScreen' has 1 inline functions in JSX
Components affected:
- RecommendationsScreen
- RecommendationsScreen
- RecommendationsScreen
- RecommendationsScreen
- RecommendationsScreen
- RecommendationsScreen
- RecommendationsScreen
- RecommendationsScreen

## Component 'SetGoalModal' has 1 inline functions in JSX
Components affected:
- SetGoalModal
- SetGoalModal
- SetGoalModal
- SetGoalModal
- SetGoalModal
- SetGoalModal
- SetGoalModal
- SetGoalModal

## Component 'LoadingView' has useEffect without dependency array
Components affected:
- LoadingView
- LoadingView
- LoadingView
- LoadingView

## Component 'CompareBar' has 1 inline functions in JSX
Components affected:
- CompareBar
- CompareBar
- CompareBar
- CompareBar
- CompareBar
- CompareBar

## Component 'Header' has 1 inline functions in JSX
Components affected:
- Header
- Header
- Header
- Header
- Header
- Header
- Header

## Component 'RatingBadge' has 3 inline functions in JSX
Components affected:
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge

## Component 'TypeBadge' has 3 inline functions in JSX
Components affected:
- TypeBadge
- TypeBadge
- TypeBadge
- TypeBadge
- TypeBadge
- TypeBadge
- TypeBadge

## Component 'StrainsList' has 3 inline functions in JSX
Components affected:
- StrainsList
- StrainsList
- StrainsList
- StrainsList
- StrainsList
- StrainsList
- StrainsList

## Component 'CompareRow' has 3 inline functions in JSX
Components affected:
- CompareRow
- CompareRow
- CompareRow
- CompareRow
- CompareRow
- CompareRow

## Component 'CompareScreen' has 3 inline functions in JSX
Components affected:
- CompareScreen
- CompareScreen
- CompareScreen
- CompareScreen
- CompareScreen
- CompareScreen

## Component 'DailyAverageOverview' has 1 inline functions in JSX
Components affected:
- DailyAverageOverview
- DailyAverageOverview
- DailyAverageOverview
- DailyAverageOverview
- DailyAverageOverview
- DailyAverageOverview

## Component 'DailyLimits' has 3 inline functions in JSX
Components affected:
- DailyLimits
- DailyLimits
- DailyLimits
- DailyLimits
- DailyLimits

## Component 'StrainUsage' has 1 inline functions in JSX
Components affected:
- StrainUsage
- StrainUsage
- StrainUsage
- StrainUsage
- StrainUsage
- StrainUsage
- StrainUsage
- StrainUsage

## Component 'Section' has useEffect without dependency array
Components affected:
- Section
- Section
- Section
- Section
- Section
- Section
- Section
- Section
- Section

## Component 'StatItem' has useEffect without dependency array
Components affected:
- StatItem
- StatItem
- StatItem
- StatItem
- StatItem
- StatItem
- StatItem
- StatItem
- StatItem

## Component 'DetailItem' has useEffect without dependency array
Components affected:
- DetailItem
- DetailItem
- DetailItem
- DetailItem
- DetailItem
- DetailItem
- DetailItem
- DetailItem
- DetailItem

## Component 'RatingBadge' has useEffect without dependency array
Components affected:
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge
- RatingBadge

## Component 'StrainDetails' has useEffect without dependency array
Components affected:
- StrainDetails
- StrainDetails
- StrainDetails
- StrainDetails
- StrainDetails
- StrainDetails
- StrainDetails
- StrainDetails
- StrainDetails

## Component 'WeeklyAverage' has 1 inline functions in JSX
Components affected:
- WeeklyAverage
- WeeklyAverage
- WeeklyAverage
- WeeklyAverage
- WeeklyAverage
- WeeklyAverage



================================================================================
# FILE: app/(tabs)/_layout.tsx
================================================================================

# Imports:
# import { Tabs } from 'expo-router'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '@/src/constants'

# Components:
Component: TabLayout (functional)
  Complexity: 0 (Low)



================================================================================
# FILE: app/(tabs)/devices.tsx
================================================================================

# Imports:
# import { BluetoothContext, BluetoothHandler } from '@/src/contexts/BluetoothContext'
# import { getSavedDevices, saveDevices } from '@/src/dbManager'
# import { SavedDevice } from '@/src/types'
# import { React, { useState, useEffect, useRef, useContext } } from 'react'
# import { View, Text, FlatList, TouchableOpacity, StyleSheet, ActivityIndicator, Alert, ScrollView } from 'react-native'
# ... and 6 more imports

# Components:
Component: Devices (functional)
  Hooks used:
    useState
    useEffect
    useRef
    useContext
    useState
    useState
    useState
    useState
    useState
    useRef
    useContext
    useEffect
    useEffect
  Complexity: 26 (High)



================================================================================
# FILE: app/(tabs)/index.tsx
================================================================================

# Imports:
# import { Redirect } from 'expo-router'

# Components:
Component: Index (functional)
  Complexity: 0 (Low)



================================================================================
# FILE: app/(tabs)/journal.tsx
================================================================================

# Imports:
# import { React, { useState } } from 'react'
# import { View, Text, Modal, TextInput, Button, StyleSheet } from 'react-native'
# import { Calendar } from 'react-native-calendars'

# Components:
Component: JournalCalendar (functional)
  Hooks used:
    useState
    useState
    useState
    useState
    useState
  Complexity: 6 (Medium)



================================================================================
# FILE: app/(tabs)/mydata.tsx
================================================================================

# Imports:
# import { React, { memo, useCallback, useState } } from 'react'
# import { View, StyleSheet, TouchableOpacity } from 'react-native'
# import { SafeAreaProvider } from 'react-native-safe-area-context'
# import { useRouter } from 'expo-router'
# import { COLORS } from '../../src/constants'
# ... and 21 more imports

# Components:
Component: MyData (functional)
  Hooks used:
    useCallback
    useState
    useRouter
    useDataService
    useDataService
    useRouter
    useState
    useState
    useState
    useDataService
    useCallback
  Complexity: 14 (High)



================================================================================
# FILE: app/(tabs)/trending.tsx
================================================================================

# Imports:
# import { React, { useState, useCallback, useEffect, memo, useMemo } } from 'react'
# import { View, Text, StyleSheet, Platform } from 'react-native'
# import { useRouter } from 'expo-router'
# import { SafeAreaProvider } from 'react-native-safe-area-context'
# import { useStrains } from '../../src/hooks/useStrains'
# ... and 11 more imports

# Components:
Component: TrendingScreen (functional)
  Hooks used:
    useState
    useCallback
    useEffect
    useMemo
    useRouter
    useStrains
    useStrains
    useRouter
    useState
    useState
    useState
    useState
    useStrains
    useEffect
  Complexity: 21 (High)



================================================================================
# FILE: app/_layout.tsx
================================================================================

# Imports:
# import { Stack } from 'expo-router'
# import { useState, useEffect } from 'react'
# import { BluetoothContext, BluetoothHandler } from '@/src/contexts/BluetoothContext'
# import { useColorScheme } from 'react-native'

# Components:
Component: RootLayout (functional)
  Hooks used:
    useState
    useEffect
    useColorScheme
    useColorScheme
    useState
  Complexity: 5 (Medium)



================================================================================
# FILE: app/ai/_layout.tsx
================================================================================

# Imports:
# import { React, { useEffect, useState } } from 'react'
# import { Tabs, useRouter, usePathname } from 'expo-router'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { AsyncStorage } from '@react-native-async-storage/async-storage'
# import { View, ActivityIndicator, Text, StyleSheet } from 'react-native'
# ... and 2 more imports

# Components:
Component: AILayout (functional)
  Hooks used:
    useEffect
    useState
    useRouter
    usePathname
    useRouter
    usePathname
    useState
    useState
    useEffect
  Complexity: 13 (High)



================================================================================
# FILE: app/ai/chat.tsx
================================================================================

# Imports:
# import { React, { useState, useRef, useEffect } } from 'react'
# import { View, Text, StyleSheet, TextInput, TouchableOpacity, FlatList, KeyboardAvoidingView, Platform, ActivityIndicator } from 'react-native'
# import { Stack } from 'expo-router'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { useAIRecommendations } from '../../src/hooks/useAIRecommendations'
# ... and 4 more imports

# Components:
Component: ChatScreen (functional)
  Hooks used:
    useState
    useRef
    useEffect
    useAIRecommendations
    useAIRecommendations
    useAIRecommendations
    useState
    useState
    useRef
    useEffect
    useEffect
  Complexity: 23 (High)
  Performance Issues:
    ⚠️ Component 'ChatScreen' has useEffect without dependency array



================================================================================
# FILE: app/ai/index.tsx
================================================================================

# Imports:
# import { useEffect } from 'react'
# import { Redirect } from 'expo-router'

# Components:
Component: AIIndex (functional)
  Hooks used:
    useEffect
  Complexity: 1 (Low)



================================================================================
# FILE: app/ai/journal-insights.tsx
================================================================================

# Imports:
# import { React, { useState } } from 'react'
# import { View, Text, StyleSheet, ScrollView, TouchableOpacity, ActivityIndicator } from 'react-native'
# import { Stack } from 'expo-router'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { useAIRecommendations } from '../../src/hooks/useAIRecommendations'
# ... and 4 more imports

# Components:
Component: JournalInsightsScreen (functional)
  Hooks used:
    useState
    useAIRecommendations
    useAIRecommendations
    useAIRecommendations
    useState
  Complexity: 9 (Medium)



================================================================================
# FILE: app/ai/onboarding.tsx
================================================================================

# Imports:
# import { React, { useState, useEffect } } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native'
# import { Stack, useRouter } from 'expo-router'
# import { LinearGradient } from 'expo-linear-gradient'
# import { AsyncStorage } from '@react-native-async-storage/async-storage'
# ... and 4 more imports

# Components:
Component: AIOnboarding (functional)
  Hooks used:
    useState
    useEffect
    useRouter
    useRouter
    useState
    useState
    useState
    useState
    useEffect
  Complexity: 15 (High)

# Type Definitions:
Types:
  OnboardingStep = {
  title: string




================================================================================
# FILE: app/ai/recommendations.tsx
================================================================================

# Imports:
# import { React, { useState, useEffect } } from 'react'
# import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert, TextInput } from 'react-native'
# import { Stack, useRouter } from 'expo-router'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { useAIRecommendations } from '../../src/hooks/useAIRecommendations'
# ... and 4 more imports

# Components:
Component: RecommendationsScreen (functional)
  Hooks used:
    useState
    useEffect
    useRouter
    useAIRecommendations
    useAIRecommendations
    useRouter
    useAIRecommendations
    useState
    useState
    useState
    useEffect
  Complexity: 27 (High)
  Performance Issues:
    ⚠️ Component 'RecommendationsScreen' has 1 inline functions in JSX

# Type Definitions:
Interfaces:
  UIStrainRecommendation extends StrainRecommendation
    name: string
    type: string
    effects: string[]
    reason: string




================================================================================
# FILE: app/components/Header.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet } from 'react-native'
# import { COLORS } from '@/src/constants'

# Components:
Component: Header (functional)
  Props:
    title: any
  Complexity: 0 (Low)

# Type Definitions:
Interfaces:
  HeaderProps
    title: string




================================================================================
# FILE: app/components/StatsOverviewCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, Platform } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { LinearGradient } from 'expo-linear-gradient'
# import { Card } from './shared/Card'
# ... and 3 more imports

# Type Definitions:
Interfaces:
  StatsOverviewCardProps
    stats: UsageStats




================================================================================
# FILE: app/components/TimeDistributionCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, Platform } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '../../src/constants'
# ... and 2 more imports

# Components:
Component: TimeDistributionCard (functional)
  Props:
    timeData: any
  Complexity: 4 (Low)

Component: TimeSlotComponent (functional)
  Props:
    type: any
    value: any
  Complexity: 4 (Low)

# Type Definitions:
Interfaces:
  TimeDistributionCardProps
    timeData: TimeDistribution

Types:
  TimeSlot = 'morning' | 'afternoon' | 'evening' | 'night'




================================================================================
# FILE: app/components/ai/RecommendationFeedback.tsx
================================================================================

# Imports:
# import { React, { useState } } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity, TextInput, ActivityIndicator } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { AIService } from '../../../src/services/ai'

# Components:
Component: RecommendationFeedback (functional)
  Props:
    userId: any
    recommendationId: any
    onClose: any
  Hooks used:
    useState
    useState
    useState
    useState
    useState
    useState
  Complexity: 13 (High)

# Type Definitions:
Interfaces:
  RecommendationFeedbackProps
    userId: string
    recommendationId: string
    onClose: () => void




================================================================================
# FILE: app/components/charts/BarChart.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, Dimensions } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '../../../src/constants'

# Type Definitions:
Interfaces:
  BarChartProps
    data: number[]
    labels: string[]
    maxValue: number
    barColor: string




================================================================================
# FILE: app/components/charts/ChartStyles.ts
================================================================================

# Imports:
# import { StyleSheet } from 'react-native'
# import { COLORS } from '../../../src/constants'



================================================================================
# FILE: app/components/charts/LineChart.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, StyleSheet, Dimensions } from 'react-native'
# import { LineChart as RNLineChart } from 'react-native-chart-kit'
# import { COLORS } from '../../../src/constants'

# Type Definitions:
Interfaces:
  LineChartProps
    data: number[]
    labels: string[]
    color: string
    width: number
    height: number




================================================================================
# FILE: app/components/charts/MonthlyOverviewChart.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, TouchableOpacity, StyleSheet, Platform, Dimensions } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# ... and 3 more imports

# Type Definitions:
Interfaces:
  MonthlyOverviewChartProps
    data: ChartDataPoint[]
    onPress: () => void




================================================================================
# FILE: app/components/charts/WeeklyOverviewChart.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, TouchableOpacity, StyleSheet, Platform, Dimensions } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# ... and 3 more imports

# Type Definitions:
Interfaces:
  WeeklyOverviewChartProps
    data: ChartDataPoint[]
    onPress: () => void




================================================================================
# FILE: app/components/mydata/AIRecommendationCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# ... and 1 more imports

# Type Definitions:
Interfaces:
  AIRecommendationCardProps
    onPress: () => void




================================================================================
# FILE: app/components/mydata/DailyAverageCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# ... and 2 more imports

# Type Definitions:
Interfaces:
  DailyAverageCardProps
    data: ChartDataPoint[]
    averageHits: number
    onPress: () => void




================================================================================
# FILE: app/components/mydata/GoalTrackingCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# import { Animated, { FadeIn } } from 'react-native-reanimated'

# Components:
Component: GoalTrackingCard (functional)
  Props:
    currentUsage: any
    goalUsage: any
    onEditGoal: any
  Complexity: 2 (Low)

# Type Definitions:
Interfaces:
  GoalTrackingCardProps
    currentUsage: number
    goalUsage: number
    onEditGoal: () => void




================================================================================
# FILE: app/components/mydata/Header.tsx
================================================================================

# Imports:
# import { React, { memo } } from 'react'
# import { View, Text, StyleSheet, Platform } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'

# Components:
Component: Header (functional)
  Complexity: 0 (Low)



================================================================================
# FILE: app/components/mydata/MedicalCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, TouchableOpacity, StyleSheet } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '../../../src/constants'

# Components:
Component: MedicalCard (functional)
  Complexity: 0 (Low)



================================================================================
# FILE: app/components/mydata/NotificationBanner.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '../../../src/constants'
# ... and 1 more imports

# Type Definitions:
Interfaces:
  NotificationProps
    averageHits: number
    percentageChange: number
    onDismiss: () => void




================================================================================
# FILE: app/components/mydata/Section.tsx
================================================================================

# Imports:
# import { React, { memo } } from 'react'
# import { View, Text, StyleSheet } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '@/src/constants'

# Components:
Component: Section (functional)
  Props:
    title: any
    children: any
    SectionProps: any
  Complexity: 0 (Low)

# Type Definitions:
Interfaces:
  SectionProps
    title: string
    children: React.ReactNode




================================================================================
# FILE: app/components/mydata/SetGoalModal.tsx
================================================================================

# Imports:
# import { React, { useState } } from 'react'
# import { View, Text, StyleSheet, Modal, TouchableOpacity, TextInput, TouchableWithoutFeedback, Keyboard } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '../../../src/constants'

# Components:
Component: SetGoalModal (functional)
  Props:
    visible: any
    onClose: any
    onSave: any
    currentGoal: any
  Hooks used:
    useState
    useState
  Complexity: 3 (Low)
  Performance Issues:
    ⚠️ Component 'SetGoalModal' has 1 inline functions in JSX

# Type Definitions:
Interfaces:
  SetGoalModalProps
    visible: boolean
    onClose: () => void
    onSave: (goal: number) => void
    currentGoal: number




================================================================================
# FILE: app/components/mydata/StrainUsageCard.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# import { Animated, { FadeIn } } from 'react-native-reanimated'

# Components:
Component: StrainUsageCard (functional)
  Props:
    strainData: any
    totalHits: any
    onViewAll: any
  Complexity: 0 (Low)

# Type Definitions:
Interfaces:
  StrainUsage
    strainId: number
    strainName: string
    strainType: string
    usageCount: number
    percentageOfTotal: number

  StrainUsageCardProps
    strainData: StrainUsage[]
    totalHits: number
    onViewAll: () => void




================================================================================
# FILE: app/components/mydata/WeeklyUsageBanner.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, TouchableOpacity, StyleSheet, Platform } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# ... and 2 more imports

# Type Definitions:
Interfaces:
  WeeklyUsageBannerProps
    weeklyData: ChartDataPoint[]
    average: number
    onPress: () => void




================================================================================
# FILE: app/components/shared/Card.tsx
================================================================================

# Imports:
# import { React, { forwardRef } } from 'react'
# import { View, StyleSheet, StyleProp, ViewStyle } from 'react-native'
# import { COLORS } from '../../../src/constants'

# Components:
Component: Card (functional)
  Props:
    children: any
    style: any
    ref: any
  Complexity: 0 (Low)

# Type Definitions:
Interfaces:
  CardProps
    children: React.ReactNode
    style: StyleProp<ViewStyle>




================================================================================
# FILE: app/components/shared/ErrorView.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '@/src/constants'

# Components:
Component: ErrorView (functional)
  Props:
    error: any
  Complexity: 0 (Low)

# Type Definitions:
Interfaces:
  ErrorViewProps
    error: string




================================================================================
# FILE: app/components/shared/LoadingView.tsx
================================================================================

# Imports:
# import { React, { useEffect } } from 'react'
# import { View, Text, StyleSheet } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# import { Animated, { 
  withRepeat, 
  withTiming,
  useAnimatedStyle, 
  useSharedValue,
  FadeIn
} } from 'react-native-reanimated'
# ... and 1 more imports

# Components:
Component: LoadingView (functional)
  Hooks used:
    useEffect
    useAnimatedStyle
    useSharedValue
    useSharedValue
    useEffect
    useAnimatedStyle
  Complexity: 6 (Medium)
  Performance Issues:
    ⚠️ Component 'LoadingView' has useEffect without dependency array



================================================================================
# FILE: app/components/trending/CompareBar.tsx
================================================================================

# Imports:
# import { React, { memo } } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity, FlatList } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# import { Strain } from '../../../src/dbManager'
# ... and 1 more imports

# Components:
Component: CompareBar (functional)
  Props:
    compareList: any
    onCompareToggle: any
    onCompare: any
    CompareBarProps: any
  Complexity: 0 (Low)
  Performance Issues:
    ⚠️ Component 'CompareBar' has 1 inline functions in JSX

# Type Definitions:
Interfaces:
  CompareBarProps
    compareList: Strain[]
    onCompareToggle: (strain: Strain) => void
    onCompare: () => void




================================================================================
# FILE: app/components/trending/Header.tsx
================================================================================

# Imports:
# import { React } from 'react'
# import { View, Text, StyleSheet, TextInput, TouchableOpacity } from 'react-native'
# import { Ionicons } from '@expo/vector-icons'
# import { useSafeAreaInsets } from 'react-native-safe-area-context'
# import { LinearGradient } from 'expo-linear-gradient'
# ... and 3 more imports

# Components:
Component: Header (functional)
  Props:
    searchQuery: any
    setSearchQuery: any
    showFilters: any
    setShowFilters: any
    filters: any
    handleClearSearch: any
  Hooks used:
    useSafeAreaInsets
    useSafeAreaInsets
  Complexity: 3 (Low)
  Performance Issues:
    ⚠️ Component 'Header' has 1 inline functions in JSX

# Type Definitions:
Interfaces:
  HeaderProps
    searchQuery: string
    setSearchQuery: (query: string) => void
    showFilters: boolean
    setShowFilters: (show: boolean) => void
    filters: StrainSearchFilters
    handleClearSearch: () => void




================================================================================
# FILE: app/components/trending/SearchBar.tsx
================================================================================

# Imports:
# import { React, { memo } } from 'react'
# import { View, TextInput, TouchableOpacity, StyleSheet, Platform } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# import { LinearGradient } from 'expo-linear-gradient'
# ... and 3 more imports

# Components:
Component: SearchBar (functional)
  Props:
    searchQuery: any
    setSearchQuery: any
    showFilters: any
    setShowFilters: any
    filters: any
    onClear: any
    SearchBarProps: any
  Hooks used:
    useAnimatedStyle
    useSharedValue
  Complexity: 4 (Low)

# Type Definitions:
Interfaces:
  SearchBarProps
    searchQuery: string
    setSearchQuery: (query: string) => void
    showFilters: boolean
    setShowFilters: (show: boolean) => void
    filters: StrainSearchFilters
    onClear: () => void




================================================================================
# FILE: app/components/trending/SearchFilters.tsx
================================================================================

# Imports:
# import { React, { useState, useEffect } } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { COLORS } from '../../../src/constants'
# import { StrainSearchFilters } from '../../../src/services/StrainService'
# ... and 1 more imports

# Components:
Component: SearchFilters (functional)
  Props:
    filters: any
    onFilterChange: any
    onApplyFilters: any
    categories: any
  Hooks used:
    useState
    useEffect
    useState
  Complexity: 5 (Medium)

# Type Definitions:
Interfaces:
  SearchFiltersProps
    filters: StrainSearchFilters
    onFilterChange: (filters: StrainSearchFilters) => void
    onApplyFilters: () => void
    categories: { [key: string]: number }




================================================================================
# FILE: app/components/trending/Section.tsx
================================================================================

# Imports:
# import { React, { memo } } from 'react'
# import { View, Text, StyleSheet, Platform } from 'react-native'
# import { LinearGradient } from 'expo-linear-gradient'
# import { COLORS } from '../../../src/constants'

# Components:
Component: Section (functional)
  Props:
    title: any
    children: any
    SectionProps: any
  Complexity: 0 (Low)

# Type Definitions:
Interfaces:
  SectionProps
    title: string
    children: React.ReactNode




================================================================================
# FILE: app/components/trending/StrainsList.tsx
================================================================================

# Imports:
# import { React, { memo, useCallback } } from 'react'
# import { View, Text, StyleSheet, TouchableOpacity, FlatList, Platform } from 'react-native'
# import { useRouter } from 'expo-router'
# import { MaterialCommunityIcons } from '@expo/vector-icons'
# import { LinearGradient } from 'expo-linear-gradient'
# ... and 3 more imports

# Components:
Component: RatingBadge (functional)
  Props:
    rating: any
  Hooks used:
    useCallback
    useRouter
  Complexity: 12 (High)
  Performance Issues:
    ⚠️ Component 'RatingBadge' has 3 inline functions in JSX

Component: TypeBadge (functional)
  Props:
    type: any
  Hooks used:
    useCallback
    useRouter
  Complexity: 12 (High)
  Performance Issues:
    ⚠️ Component 'TypeBadge' has 3 inline functions in JSX

Component: StrainsList (functional)
  Props:
    strains: any
    onCompareToggle: any
    onFavoriteToggle: any
    compareList: any
    isFavorite: any
    isLoading: any
    onEndReached: any
    StrainsListProps: any
  Hooks used:
    useCallback
    useRouter
    useRouter
    useCallback
    useCallback
    useCallback
  Complexity: 16 (High)
  Performance Issues:
    ⚠️ Component 'StrainsList' has 3 inline functions in JSX

# Type Definitions:
Interfaces:
  StrainsListProps
    strains: Strain[]
    onCompareToggle: (strain: Strain) => void
    onFavoriteToggle: (strainId: number) => void
    compareList: Strain[]
    isFavorite: (strainId: number) => boolean
    isLoading: boolean
    onEndReached: () => void

